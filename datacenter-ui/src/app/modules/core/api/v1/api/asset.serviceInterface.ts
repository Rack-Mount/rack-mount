/**
 * Datacenter API
 *
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
import { HttpHeaders }                                       from '@angular/common/http';

import { Observable }                                        from 'rxjs';

import { Asset } from '../model/models';
import { AssetCustomField } from '../model/models';
import { AssetModel } from '../model/models';
import { AssetState } from '../model/models';
import { AssetType } from '../model/models';
import { ListAssetCustomFields200Response } from '../model/models';
import { ListAssetModels200Response } from '../model/models';
import { ListAssetStates200Response } from '../model/models';
import { ListAssetTypes200Response } from '../model/models';
import { ListAssets200Response } from '../model/models';
import { ListRackTypes200Response } from '../model/models';
import { ListRackUnits200Response } from '../model/models';
import { ListRacks200Response } from '../model/models';
import { ListVendors200Response } from '../model/models';
import { Rack } from '../model/models';
import { RackType } from '../model/models';
import { RackUnit } from '../model/models';
import { Vendor } from '../model/models';


import { Configuration }                                     from '../configuration';


export interface CreateAssetRequestParams {
    asset?: Asset;
}

export interface CreateAssetCustomFieldRequestParams {
    assetCustomField?: AssetCustomField;
}

export interface CreateAssetModelRequestParams {
    assetModel?: AssetModel;
}

export interface CreateAssetStateRequestParams {
    assetState?: AssetState;
}

export interface CreateAssetTypeRequestParams {
    assetType?: AssetType;
}

export interface CreateRackRequestParams {
    rack?: Rack;
}

export interface CreateRackTypeRequestParams {
    rackType?: RackType;
}

export interface CreateRackUnitRequestParams {
    rackUnit?: RackUnit;
}

export interface CreateVendorRequestParams {
    vendor?: Vendor;
}

export interface DestroyAssetRequestParams {
    id: string;
    ordering?: string;
    search?: string;
    hostname?: string;
    sapId?: string;
    serialNumber?: string;
    orderId?: string;
    model?: string;
    state?: string;
    modelVendor?: string;
    modelType?: string;
}

export interface DestroyAssetCustomFieldRequestParams {
    id: string;
    ordering?: string;
}

export interface DestroyAssetModelRequestParams {
    id: string;
    ordering?: string;
    search?: string;
    name?: string;
    vendor?: string;
    type?: string;
}

export interface DestroyAssetStateRequestParams {
    id: string;
    name?: string;
}

export interface DestroyAssetTypeRequestParams {
    id: string;
    name?: string;
}

export interface DestroyRackRequestParams {
    name: string;
    name2?: string;
}

export interface DestroyRackTypeRequestParams {
    id: string;
    model?: string;
}

export interface DestroyRackUnitRequestParams {
    id: string;
    ordering?: string;
    search?: string;
    rackName?: string;
    deviceHostname?: string;
    rackLocation?: string;
}

export interface DestroyVendorRequestParams {
    id: string;
    name?: string;
}

export interface ListAssetCustomFieldsRequestParams {
    page?: number;
    pageSize?: number;
    ordering?: string;
}

export interface ListAssetModelsRequestParams {
    page?: number;
    pageSize?: number;
    ordering?: string;
    search?: string;
    name?: string;
    vendor?: string;
    type?: string;
}

export interface ListAssetStatesRequestParams {
    page?: number;
    pageSize?: number;
    name?: string;
}

export interface ListAssetTypesRequestParams {
    page?: number;
    pageSize?: number;
    name?: string;
}

export interface ListAssetsRequestParams {
    page?: number;
    pageSize?: number;
    ordering?: string;
    search?: string;
    hostname?: string;
    sapId?: string;
    serialNumber?: string;
    orderId?: string;
    model?: string;
    state?: string;
    modelVendor?: string;
    modelType?: string;
}

export interface ListRackTypesRequestParams {
    page?: number;
    pageSize?: number;
    model?: string;
}

export interface ListRackUnitsRequestParams {
    page?: number;
    pageSize?: number;
    ordering?: string;
    search?: string;
    rackName?: string;
    deviceHostname?: string;
    rackLocation?: string;
}

export interface ListRacksRequestParams {
    page?: number;
    pageSize?: number;
    name?: string;
}

export interface ListVendorsRequestParams {
    page?: number;
    pageSize?: number;
    name?: string;
}

export interface PartialUpdateAssetRequestParams {
    id: string;
    ordering?: string;
    search?: string;
    hostname?: string;
    sapId?: string;
    serialNumber?: string;
    orderId?: string;
    model?: string;
    state?: string;
    modelVendor?: string;
    modelType?: string;
    asset?: Asset;
}

export interface PartialUpdateAssetCustomFieldRequestParams {
    id: string;
    ordering?: string;
    assetCustomField?: AssetCustomField;
}

export interface PartialUpdateAssetModelRequestParams {
    id: string;
    ordering?: string;
    search?: string;
    name?: string;
    vendor?: string;
    type?: string;
    assetModel?: AssetModel;
}

export interface PartialUpdateAssetStateRequestParams {
    id: string;
    name?: string;
    assetState?: AssetState;
}

export interface PartialUpdateAssetTypeRequestParams {
    id: string;
    name?: string;
    assetType?: AssetType;
}

export interface PartialUpdateRackRequestParams {
    name: string;
    name2?: string;
    rack?: Rack;
}

export interface PartialUpdateRackTypeRequestParams {
    id: string;
    model?: string;
    rackType?: RackType;
}

export interface PartialUpdateRackUnitRequestParams {
    id: string;
    ordering?: string;
    search?: string;
    rackName?: string;
    deviceHostname?: string;
    rackLocation?: string;
    rackUnit?: RackUnit;
}

export interface PartialUpdateVendorRequestParams {
    id: string;
    name?: string;
    vendor?: Vendor;
}

export interface RetrieveAssetRequestParams {
    id: string;
    ordering?: string;
    search?: string;
    hostname?: string;
    sapId?: string;
    serialNumber?: string;
    orderId?: string;
    model?: string;
    state?: string;
    modelVendor?: string;
    modelType?: string;
}

export interface RetrieveAssetCustomFieldRequestParams {
    id: string;
    ordering?: string;
}

export interface RetrieveAssetModelRequestParams {
    id: string;
    ordering?: string;
    search?: string;
    name?: string;
    vendor?: string;
    type?: string;
}

export interface RetrieveAssetStateRequestParams {
    id: string;
    name?: string;
}

export interface RetrieveAssetTypeRequestParams {
    id: string;
    name?: string;
}

export interface RetrieveRackRequestParams {
    name: string;
    name2?: string;
}

export interface RetrieveRackTypeRequestParams {
    id: string;
    model?: string;
}

export interface RetrieveRackUnitRequestParams {
    id: string;
    ordering?: string;
    search?: string;
    rackName?: string;
    deviceHostname?: string;
    rackLocation?: string;
}

export interface RetrieveVendorRequestParams {
    id: string;
    name?: string;
}

export interface UpdateAssetRequestParams {
    id: string;
    ordering?: string;
    search?: string;
    hostname?: string;
    sapId?: string;
    serialNumber?: string;
    orderId?: string;
    model?: string;
    state?: string;
    modelVendor?: string;
    modelType?: string;
    asset?: Asset;
}

export interface UpdateAssetCustomFieldRequestParams {
    id: string;
    ordering?: string;
    assetCustomField?: AssetCustomField;
}

export interface UpdateAssetModelRequestParams {
    id: string;
    ordering?: string;
    search?: string;
    name?: string;
    vendor?: string;
    type?: string;
    assetModel?: AssetModel;
}

export interface UpdateAssetStateRequestParams {
    id: string;
    name?: string;
    assetState?: AssetState;
}

export interface UpdateAssetTypeRequestParams {
    id: string;
    name?: string;
    assetType?: AssetType;
}

export interface UpdateRackRequestParams {
    name: string;
    name2?: string;
    rack?: Rack;
}

export interface UpdateRackTypeRequestParams {
    id: string;
    model?: string;
    rackType?: RackType;
}

export interface UpdateRackUnitRequestParams {
    id: string;
    ordering?: string;
    search?: string;
    rackName?: string;
    deviceHostname?: string;
    rackLocation?: string;
    rackUnit?: RackUnit;
}

export interface UpdateVendorRequestParams {
    id: string;
    name?: string;
    vendor?: Vendor;
}


export interface AssetServiceInterface {
    defaultHeaders: HttpHeaders;
    configuration: Configuration;

    /**
     * 
     * AssetViewSet is a viewset for handling CRUD operations on Asset objects.
* @param requestParameters
     */
    createAsset(requestParameters: CreateAssetRequestParams, extraHttpRequestParams?: any): Observable<Asset>;

    /**
     * 
     * 
* @param requestParameters
     */
    createAssetCustomField(requestParameters: CreateAssetCustomFieldRequestParams, extraHttpRequestParams?: any): Observable<AssetCustomField>;

    /**
     * 
     * AssetModelViewSet is a viewset for handling CRUD operations on AssetModel objects.
* @param requestParameters
     */
    createAssetModel(requestParameters: CreateAssetModelRequestParams, extraHttpRequestParams?: any): Observable<AssetModel>;

    /**
     * 
     * AssetStateViewSet is a viewset for handling CRUD operations on AssetState objects.
* @param requestParameters
     */
    createAssetState(requestParameters: CreateAssetStateRequestParams, extraHttpRequestParams?: any): Observable<AssetState>;

    /**
     * 
     * AssetTypeViewSet is a viewset for handling CRUD operations on AssetType model.
* @param requestParameters
     */
    createAssetType(requestParameters: CreateAssetTypeRequestParams, extraHttpRequestParams?: any): Observable<AssetType>;

    /**
     * 
     * RackViewSet is a viewset for handling CRUD operations on Rack objects.
* @param requestParameters
     */
    createRack(requestParameters: CreateRackRequestParams, extraHttpRequestParams?: any): Observable<Rack>;

    /**
     * 
     * RackTypeViewSet is a viewset for handling CRUD operations on RackType model.
* @param requestParameters
     */
    createRackType(requestParameters: CreateRackTypeRequestParams, extraHttpRequestParams?: any): Observable<RackType>;

    /**
     * 
     * RackUnitViewSet is a viewset for handling CRUD operations on RackUnit objects.
* @param requestParameters
     */
    createRackUnit(requestParameters: CreateRackUnitRequestParams, extraHttpRequestParams?: any): Observable<RackUnit>;

    /**
     * 
     * VendorViewSet is a viewset for handling CRUD operations on Vendor model.
* @param requestParameters
     */
    createVendor(requestParameters: CreateVendorRequestParams, extraHttpRequestParams?: any): Observable<Vendor>;

    /**
     * 
     * AssetViewSet is a viewset for handling CRUD operations on Asset objects.
* @param requestParameters
     */
    destroyAsset(requestParameters: DestroyAssetRequestParams, extraHttpRequestParams?: any): Observable<{}>;

    /**
     * 
     * 
* @param requestParameters
     */
    destroyAssetCustomField(requestParameters: DestroyAssetCustomFieldRequestParams, extraHttpRequestParams?: any): Observable<{}>;

    /**
     * 
     * AssetModelViewSet is a viewset for handling CRUD operations on AssetModel objects.
* @param requestParameters
     */
    destroyAssetModel(requestParameters: DestroyAssetModelRequestParams, extraHttpRequestParams?: any): Observable<{}>;

    /**
     * 
     * AssetStateViewSet is a viewset for handling CRUD operations on AssetState objects.
* @param requestParameters
     */
    destroyAssetState(requestParameters: DestroyAssetStateRequestParams, extraHttpRequestParams?: any): Observable<{}>;

    /**
     * 
     * AssetTypeViewSet is a viewset for handling CRUD operations on AssetType model.
* @param requestParameters
     */
    destroyAssetType(requestParameters: DestroyAssetTypeRequestParams, extraHttpRequestParams?: any): Observable<{}>;

    /**
     * 
     * RackViewSet is a viewset for handling CRUD operations on Rack objects.
* @param requestParameters
     */
    destroyRack(requestParameters: DestroyRackRequestParams, extraHttpRequestParams?: any): Observable<{}>;

    /**
     * 
     * RackTypeViewSet is a viewset for handling CRUD operations on RackType model.
* @param requestParameters
     */
    destroyRackType(requestParameters: DestroyRackTypeRequestParams, extraHttpRequestParams?: any): Observable<{}>;

    /**
     * 
     * RackUnitViewSet is a viewset for handling CRUD operations on RackUnit objects.
* @param requestParameters
     */
    destroyRackUnit(requestParameters: DestroyRackUnitRequestParams, extraHttpRequestParams?: any): Observable<{}>;

    /**
     * 
     * VendorViewSet is a viewset for handling CRUD operations on Vendor model.
* @param requestParameters
     */
    destroyVendor(requestParameters: DestroyVendorRequestParams, extraHttpRequestParams?: any): Observable<{}>;

    /**
     * 
     * 
* @param requestParameters
     */
    listAssetCustomFields(requestParameters: ListAssetCustomFieldsRequestParams, extraHttpRequestParams?: any): Observable<ListAssetCustomFields200Response>;

    /**
     * 
     * AssetModelViewSet is a viewset for handling CRUD operations on AssetModel objects.
* @param requestParameters
     */
    listAssetModels(requestParameters: ListAssetModelsRequestParams, extraHttpRequestParams?: any): Observable<ListAssetModels200Response>;

    /**
     * 
     * AssetStateViewSet is a viewset for handling CRUD operations on AssetState objects.
* @param requestParameters
     */
    listAssetStates(requestParameters: ListAssetStatesRequestParams, extraHttpRequestParams?: any): Observable<ListAssetStates200Response>;

    /**
     * 
     * AssetTypeViewSet is a viewset for handling CRUD operations on AssetType model.
* @param requestParameters
     */
    listAssetTypes(requestParameters: ListAssetTypesRequestParams, extraHttpRequestParams?: any): Observable<ListAssetTypes200Response>;

    /**
     * 
     * AssetViewSet is a viewset for handling CRUD operations on Asset objects.
* @param requestParameters
     */
    listAssets(requestParameters: ListAssetsRequestParams, extraHttpRequestParams?: any): Observable<ListAssets200Response>;

    /**
     * 
     * RackTypeViewSet is a viewset for handling CRUD operations on RackType model.
* @param requestParameters
     */
    listRackTypes(requestParameters: ListRackTypesRequestParams, extraHttpRequestParams?: any): Observable<ListRackTypes200Response>;

    /**
     * 
     * RackUnitViewSet is a viewset for handling CRUD operations on RackUnit objects.
* @param requestParameters
     */
    listRackUnits(requestParameters: ListRackUnitsRequestParams, extraHttpRequestParams?: any): Observable<ListRackUnits200Response>;

    /**
     * 
     * RackViewSet is a viewset for handling CRUD operations on Rack objects.
* @param requestParameters
     */
    listRacks(requestParameters: ListRacksRequestParams, extraHttpRequestParams?: any): Observable<ListRacks200Response>;

    /**
     * 
     * VendorViewSet is a viewset for handling CRUD operations on Vendor model.
* @param requestParameters
     */
    listVendors(requestParameters: ListVendorsRequestParams, extraHttpRequestParams?: any): Observable<ListVendors200Response>;

    /**
     * 
     * AssetViewSet is a viewset for handling CRUD operations on Asset objects.
* @param requestParameters
     */
    partialUpdateAsset(requestParameters: PartialUpdateAssetRequestParams, extraHttpRequestParams?: any): Observable<Asset>;

    /**
     * 
     * 
* @param requestParameters
     */
    partialUpdateAssetCustomField(requestParameters: PartialUpdateAssetCustomFieldRequestParams, extraHttpRequestParams?: any): Observable<AssetCustomField>;

    /**
     * 
     * AssetModelViewSet is a viewset for handling CRUD operations on AssetModel objects.
* @param requestParameters
     */
    partialUpdateAssetModel(requestParameters: PartialUpdateAssetModelRequestParams, extraHttpRequestParams?: any): Observable<AssetModel>;

    /**
     * 
     * AssetStateViewSet is a viewset for handling CRUD operations on AssetState objects.
* @param requestParameters
     */
    partialUpdateAssetState(requestParameters: PartialUpdateAssetStateRequestParams, extraHttpRequestParams?: any): Observable<AssetState>;

    /**
     * 
     * AssetTypeViewSet is a viewset for handling CRUD operations on AssetType model.
* @param requestParameters
     */
    partialUpdateAssetType(requestParameters: PartialUpdateAssetTypeRequestParams, extraHttpRequestParams?: any): Observable<AssetType>;

    /**
     * 
     * RackViewSet is a viewset for handling CRUD operations on Rack objects.
* @param requestParameters
     */
    partialUpdateRack(requestParameters: PartialUpdateRackRequestParams, extraHttpRequestParams?: any): Observable<Rack>;

    /**
     * 
     * RackTypeViewSet is a viewset for handling CRUD operations on RackType model.
* @param requestParameters
     */
    partialUpdateRackType(requestParameters: PartialUpdateRackTypeRequestParams, extraHttpRequestParams?: any): Observable<RackType>;

    /**
     * 
     * RackUnitViewSet is a viewset for handling CRUD operations on RackUnit objects.
* @param requestParameters
     */
    partialUpdateRackUnit(requestParameters: PartialUpdateRackUnitRequestParams, extraHttpRequestParams?: any): Observable<RackUnit>;

    /**
     * 
     * VendorViewSet is a viewset for handling CRUD operations on Vendor model.
* @param requestParameters
     */
    partialUpdateVendor(requestParameters: PartialUpdateVendorRequestParams, extraHttpRequestParams?: any): Observable<Vendor>;

    /**
     * 
     * AssetViewSet is a viewset for handling CRUD operations on Asset objects.
* @param requestParameters
     */
    retrieveAsset(requestParameters: RetrieveAssetRequestParams, extraHttpRequestParams?: any): Observable<Asset>;

    /**
     * 
     * 
* @param requestParameters
     */
    retrieveAssetCustomField(requestParameters: RetrieveAssetCustomFieldRequestParams, extraHttpRequestParams?: any): Observable<AssetCustomField>;

    /**
     * 
     * AssetModelViewSet is a viewset for handling CRUD operations on AssetModel objects.
* @param requestParameters
     */
    retrieveAssetModel(requestParameters: RetrieveAssetModelRequestParams, extraHttpRequestParams?: any): Observable<AssetModel>;

    /**
     * 
     * AssetStateViewSet is a viewset for handling CRUD operations on AssetState objects.
* @param requestParameters
     */
    retrieveAssetState(requestParameters: RetrieveAssetStateRequestParams, extraHttpRequestParams?: any): Observable<AssetState>;

    /**
     * 
     * AssetTypeViewSet is a viewset for handling CRUD operations on AssetType model.
* @param requestParameters
     */
    retrieveAssetType(requestParameters: RetrieveAssetTypeRequestParams, extraHttpRequestParams?: any): Observable<AssetType>;

    /**
     * 
     * RackViewSet is a viewset for handling CRUD operations on Rack objects.
* @param requestParameters
     */
    retrieveRack(requestParameters: RetrieveRackRequestParams, extraHttpRequestParams?: any): Observable<Rack>;

    /**
     * 
     * RackTypeViewSet is a viewset for handling CRUD operations on RackType model.
* @param requestParameters
     */
    retrieveRackType(requestParameters: RetrieveRackTypeRequestParams, extraHttpRequestParams?: any): Observable<RackType>;

    /**
     * 
     * RackUnitViewSet is a viewset for handling CRUD operations on RackUnit objects.
* @param requestParameters
     */
    retrieveRackUnit(requestParameters: RetrieveRackUnitRequestParams, extraHttpRequestParams?: any): Observable<RackUnit>;

    /**
     * 
     * VendorViewSet is a viewset for handling CRUD operations on Vendor model.
* @param requestParameters
     */
    retrieveVendor(requestParameters: RetrieveVendorRequestParams, extraHttpRequestParams?: any): Observable<Vendor>;

    /**
     * 
     * AssetViewSet is a viewset for handling CRUD operations on Asset objects.
* @param requestParameters
     */
    updateAsset(requestParameters: UpdateAssetRequestParams, extraHttpRequestParams?: any): Observable<Asset>;

    /**
     * 
     * 
* @param requestParameters
     */
    updateAssetCustomField(requestParameters: UpdateAssetCustomFieldRequestParams, extraHttpRequestParams?: any): Observable<AssetCustomField>;

    /**
     * 
     * AssetModelViewSet is a viewset for handling CRUD operations on AssetModel objects.
* @param requestParameters
     */
    updateAssetModel(requestParameters: UpdateAssetModelRequestParams, extraHttpRequestParams?: any): Observable<AssetModel>;

    /**
     * 
     * AssetStateViewSet is a viewset for handling CRUD operations on AssetState objects.
* @param requestParameters
     */
    updateAssetState(requestParameters: UpdateAssetStateRequestParams, extraHttpRequestParams?: any): Observable<AssetState>;

    /**
     * 
     * AssetTypeViewSet is a viewset for handling CRUD operations on AssetType model.
* @param requestParameters
     */
    updateAssetType(requestParameters: UpdateAssetTypeRequestParams, extraHttpRequestParams?: any): Observable<AssetType>;

    /**
     * 
     * RackViewSet is a viewset for handling CRUD operations on Rack objects.
* @param requestParameters
     */
    updateRack(requestParameters: UpdateRackRequestParams, extraHttpRequestParams?: any): Observable<Rack>;

    /**
     * 
     * RackTypeViewSet is a viewset for handling CRUD operations on RackType model.
* @param requestParameters
     */
    updateRackType(requestParameters: UpdateRackTypeRequestParams, extraHttpRequestParams?: any): Observable<RackType>;

    /**
     * 
     * RackUnitViewSet is a viewset for handling CRUD operations on RackUnit objects.
* @param requestParameters
     */
    updateRackUnit(requestParameters: UpdateRackUnitRequestParams, extraHttpRequestParams?: any): Observable<RackUnit>;

    /**
     * 
     * VendorViewSet is a viewset for handling CRUD operations on Vendor model.
* @param requestParameters
     */
    updateVendor(requestParameters: UpdateVendorRequestParams, extraHttpRequestParams?: any): Observable<Vendor>;

}
